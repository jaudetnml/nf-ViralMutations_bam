params {
    //Mandatory inputs
    Data_Folder         = "${launchDir}"
    //Folder containing the read files
    Result_Folder       = "${launchDir}/../Results"
    //Folder where to put the results
    Seq_Tech            = "Illumina"
    //or "MinION"
    MinION_split        = false
    //are MinION reads stored as multiple fastq files in barcodeXX folders?
    //If not, assumes there is 1 fastq(.gz) file per sample as SampleName.fastq(.gz)
    //If true, script expects a csv with columns Sample_Name and Barcode:
    //    Sample_Name,Barcode
    //    Condition1,barcode01
    //          ...
    MinION_Samples      = ""
    //CSV file relating samples and MinION barcodeXX folders. Two columns (Sample_Name, Barcode)
    Target_Reference    = ""
    //Fasta file containing the reference to align to, just the fasta file name
    Extension           = ".fastq"
    Conda_cache         = "${launchDir}"
    Singularity_cache   = "${launchDir}"
    SLURM_Queue         = ""

    //For tiling amplicons
    Primer_Locs         = ""
    //Bedpe file of primer locations
    Primer_Format       = "bamclipper"
    //specify whether the bedpe file is in bamclipper's expected format or the "ARTIC" output format

    //For shotgun sequencing
    Host_Reference      = ""
    //Fasta file containing the host reference to de-host the data
    Host_Indexed        = false
    //Whether the host genome is alread indexed, specify Host_IndexOutFolder if false or Host_IndexFolder if true
    Host_IndexFolder    = ""
    //Same as Target_IndexFolder, but for the Host genome
    Host_IndexOutFolder = ""
    //Folder where the newly indexed host reference is to be stored

    //snpEff inputs
    SnpEff_Name         = ""
    //name to use when building the snpEff database
    SnpEff_Folder       = ""
    //folder which contains a folder called {SnpEff_Name} containing two files:
    // sequence.fasta: the fasta sequence (same name {>SeqName} as in Target_Reference)
    // genes.gbk: GenBank format file of features
    // For segmented genomes, the GenBank file can be concatenated from the individual segment gbk files.

    //Read filtering
    Read_MinMAPQ        = 30
    // Minimum mapping quality, BWA default is 30
    Read_ExclFLAG       = 0x900
    //Removes secondary alignments

    TrimArgs   = ""
    //Other args to pass to fastp/fastplong. Do **not** set threading here!

    //Consensus calling
    Consensus_MinDepth  = 30
    //Minimum depth to call the consensus for
    Consensus_MinFreq   = 0.7
    //Minimum frequency of an allele to make consensus

    //SNP calling
    SNP_MaxCov          = -1
    //Set to a positive number to downsample over-sequenced areas (set to the maximum depth desired)
    SNP_MinDepth        = 30
    //Minimum depth for a SNP to be reported in filtered output
    SNP_MinFreq         = 0.05
    //Minimum frequency for a SNP to be reported in filtered output
    GenePos             = ""
}

conda.enabled = false
conda.cacheDir = "${params.Conda_cache}"
conda.useMamba = false

singularity.enabled = true
singularity.autoMounts = true
docker.enabled = false
podman.enabled = false
shifter.enabled = false
charliecloud.enabled = false
apptainer.enabled = false

singularity.registry = 'quay.io'
singularity.cacheDir = "${params.Singularity_cache}"

includeConfig 'configs/resources.config'
